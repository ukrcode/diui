@use "../../selectors" as vars;
@use "../../shared/css-vars" as css-vars;
@use "../../shared/functions" as fn;
@use "../../shared/mixins" as mx;
@use "../../shared/icon-strings" as icon-strings;
@use "sass:map" as map;

@mixin create-icon-sizes($core-selector, $name-size-map) {
  @each $name, $size in $name-size-map {
    #{$core-selector}-#{$name} {
      width: fn.to-rem($size);
      height: fn.to-rem($size);
    }
  }
}

// Icon
#{vars.$icon-selector} {
  display: inline-block;

  width: fn.to-rem(16px);
  height: fn.to-rem(16px);

  background-repeat: no-repeat;
  background-size: 100%;
  background-position: center;

  mask-image: url("data:image/svg+xml;base64,...");
  mask-repeat: no-repeat;
  mask-size: contain;
  mask-position: center;

  background-color: css-vars.get-var("text-color");
}

// Icon Sizes Selectors
@include create-icon-sizes(
  vars.$icon-selector,
  (
    "16": 16px,
    "24": 24px,
    "32": 32px,
    "40": 40px,
    "48": 48px,
    "56": 56px,
    "64": 64px,
  )
);

// Icon File
#{vars.$icon-file-selector} {
  mask-image: url(icon-strings.$file);
}

#{vars.$icon-download-selector} {
  mask-image: url(icon-strings.$download);
}

#{vars.$icon-magnify-glass-selector} {
  mask-image: url(icon-strings.$magnify-glass);
}

#{vars.$icon-minus-selector} {
  mask-image: url(icon-strings.$minus);
}

#{vars.$icon-plus-selector} {
  mask-image: url(icon-strings.$plus);
}
