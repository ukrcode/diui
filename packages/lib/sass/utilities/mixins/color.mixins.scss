@use "../css-vars" as cssVars;
@use "sass:map" as map;

@mixin create-vars-color-set($color-name, $color-value) {
  @include cssVars.register-vars(
    (
      $color-name: rgba($color-value, 1),
      "#{$color-name}-80": rgba($color-value, 0.8),
      "#{$color-name}-60": rgba($color-value, 0.6),
      "#{$color-name}-40": rgba($color-value, 0.4),
      "#{$color-name}-20": rgba($color-value, 0.2),
    )
  );
}

@mixin create-colors-set-vars($color-name, $colors) {
  @include cssVars.register-vars(
    (
      $color-name: map.get($colors, "100"),
      "#{$color-name}-80": map.get($colors, "80"),
      "#{$color-name}-60": map.get($colors, "60"),
      "#{$color-name}-40": map.get($colors, "40"),
      "#{$color-name}-20": map.get($colors, "20"),
    )
  );
}

@mixin map-color-variables($color-name, $color-name-to-map) {
  @include cssVars.register-vars(
    (
      $color-name: cssVars.get-var($color-name-to-map),
      "#{$color-name}-80": cssVars.get-var("#{$color-name-to-map}-80"),
      "#{$color-name}-60": cssVars.get-var("#{$color-name-to-map}-60"),
      "#{$color-name}-40": cssVars.get-var("#{$color-name-to-map}-40"),
      "#{$color-name}-20": cssVars.get-var("#{$color-name-to-map}-20"),
    )
  );
}
