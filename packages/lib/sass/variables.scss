@use "sass:color" as color;
@use "./utilities/css-vars" as cssVars;
@use "./config" as config;
@use "./utilities/mixins" as mx;

:root {
  // Black-White-Gray colors
  @include cssVars.register-vars(
    (
      "c-black": config.$c-black,
      "c-white": config.$c-white,
      "c-light-gray": config.$c-light-gray,
    )
  );

  // Color sets
  @include mx.create-colors-set-vars("c-gray", config.$c-gray-colors);
  
  @include mx.create-colors-set-vars("c-success", config.$c-malachite-colors);
  @include mx.create-colors-set-vars("c-malachite", config.$c-malachite-colors);
  
  @include mx.create-colors-set-vars("c-warning", config.$c-gorse-colors);
  @include mx.create-colors-set-vars("c-gorse", config.$c-gorse-colors);
  
  @include mx.create-colors-set-vars("c-lima", config.$c-lima-colors);
  @include mx.create-colors-set-vars("c-yellow-green", config.$c-yellow-green-colors);

  // Old implementation
  @include mx.create-vars-color-set("c-danger", config.$c-danger);
  @include mx.create-vars-color-set("c-info", config.$c-info);
  @include mx.create-vars-color-set("c-dodger-blue", config.$c-dodger-blue);
  @include mx.create-vars-color-set("c-violet", config.$c-violet);
  @include mx.create-vars-color-set("c-brick-red", config.$c-brick-red);
  @include mx.create-vars-color-set("c-pumpkin", config.$c-pumpkin);

  // Gradients
  @include cssVars.register-vars(
    (
      "gr-primary": config.$gr-primary,
    )
  );

  // Fonts
  @include cssVars.register-vars(
    (
      "font-family-primary": "e-ukraine, SF Pro, Segoe UI, Roboto, Oxygen, Ubuntu, Helvetica Neue, Helvetica, Arial, sans-serif",
      "font-family-head": "e-ukraine-head, SF Pro, Segoe UI, Roboto, Oxygen, Ubuntu, Helvetica Neue, Helvetica, Arial, sans-serif",
      "text-color": cssVars.get-var("c-black"),
      "background-color": cssVars.get-var("c-white"),
    )
  );

}
